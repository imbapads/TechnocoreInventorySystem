/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.inventory.app;

import java.awt.Color;
import java.io.InputStream;
import static java.sql.DriverManager.getConnection;
import java.sql.ResultSet;
import javax.swing.JTable;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Pads
 */
public class FrmInStock extends javax.swing.JFrame {
   String Choice="";

//    private Object Choice;

    

    /**
     * Creates new form FrmInStock
     */
    public FrmInStock() {
        initComponents();
         if(SQLiteInStock.openDB()){
            String[] columnsInStock = {"InStockID","BrandID", "BrandName", "Category", "Description", "SupplierID", "Recepient", "Quantity", "Date"};
            String[][] recordsInStock = SQLiteInStock.executeDQL("InStock", columnsInStock, "1=1");
                UIC.Table.setModel(tblInStock, recordsInStock,columnsInStock);
                

            SQLiteInStock.closeDB();
        }
         
         javax.swing.JTable table = tblInStock;
        table.getSelectionModel().addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            @Override
            public void valueChanged(javax.swing.event.ListSelectionEvent event) {
                if (table.getSelectedRow() > -1) {
                    // print first column value from selected row
                  
//                    String selectedPROD = table.getValueAt(table.getSelectedRow(), 1).toString();
//                    String selectedQTY = table.getValueAt(table.getSelectedRow(), 2).toString();
                
                    
                }
            }
        }); 
        
    this.getContentPane().setBackground(Color.black);
         this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblInStock = new javax.swing.JTable();
        btnPrintStock = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        BxSort = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menAdd = new javax.swing.JMenuItem();
        menUpdate = new javax.swing.JMenuItem();
        menMain = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        tblInStock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "InStockID", "BrandName", "Category", "Description", "SupplierID", "Recepient", "Quantity", "Date"
            }
        ));
        jScrollPane1.setViewportView(tblInStock);

        btnPrintStock.setFont(new java.awt.Font("Tekton Pro Ext", 0, 11)); // NOI18N
        btnPrintStock.setForeground(new java.awt.Color(255, 51, 51));
        btnPrintStock.setText("PRINT IN STOCK");
        btnPrintStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintStockActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("IN STOCK");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 51));
        jLabel2.setText("SEARCH");

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 51, 51));
        jLabel3.setText("SORT BY");

        BxSort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BrandID", "BrandName", "Category", "SupplierID", "Recepient", "Quantity", "Date" }));
        BxSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BxSortActionPerformed(evt);
            }
        });

        jMenu1.setText("Option");

        menAdd.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        menAdd.setText("Add Stock");
        menAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menAddActionPerformed(evt);
            }
        });
        jMenu1.add(menAdd);

        menUpdate.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        menUpdate.setText("Edit Stock");
        menUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menUpdateActionPerformed(evt);
            }
        });
        jMenu1.add(menUpdate);

        menMain.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        menMain.setText("Main");
        menMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menMainActionPerformed(evt);
            }
        });
        jMenu1.add(menMain);

        jMenuBar1.add(jMenu1);
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 819, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(BxSort, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(157, 157, 157))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(btnPrintStock)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(BxSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPrintStock))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menUpdateActionPerformed
        new FrmISUpdate().setVisible(true);
//        dispose();
    }//GEN-LAST:event_menUpdateActionPerformed

    private void menMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menMainActionPerformed
        new FrmMain().setVisible(true);
      dispose();
    }//GEN-LAST:event_menMainActionPerformed

    private void menAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menAddActionPerformed
       new FrmISAdd().setVisible(true);
//       dispose();
    }//GEN-LAST:event_menAddActionPerformed

    private void btnPrintStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintStockActionPerformed
        try{
            if(SQLiteInStock.openDB()){
                String InStockReport = ("reportInStock.jrxml");
                InputStream file = getClass().getResourceAsStream(InStockReport);
                UIC.Report.viewReport(file);
                //UIC.Report.viewReport(jspReport, reportName);
                SQLiteInStock.closeDB();
            }
        }catch(Exception e){
            System.out.println("Error: " + e.getMessage());
        }        
    }//GEN-LAST:event_btnPrintStockActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        try{
  
            SQLiteInStock.conn = getConnection(SQLiteInStock.url);
            SQLiteInStock.stmt = SQLiteInStock.conn.createStatement();
            String searched = txtSearch.getText();
            if(txtSearch.equals("")){
                        
             if(SQLiteInStock.openDB()){
            String[][] records = SQLiteInStock.read("InStock");
            String[] columns = {"InStockID","BrandID","BrandName","Category","Description","SupplierID","Recepient","Quantity","Date"};
            javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel(records, columns);
            this.tblInStock.setModel(model);
            SQLiteInStock.closeDB();
        }
            }
            else{
                String query = "SELECT * FROM InStock"
                        + " where BrandID like '%" + searched + "%'"
                        + " or BrandName like '%" + searched + "%'";
                ResultSet rs = SQLiteInStock.stmt.executeQuery(query);
                this.tblInStock.setModel(DbUtils.resultSetToTableModel(rs));
            }
            SQLiteInStock.conn.close();
        }
        catch(Exception e){
            System.out.println("Error: " + e);
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    private void BxSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BxSortActionPerformed
       
        if("BrandName".equals(Choice)){

            try{ 
            SQLiteInStock.conn = getConnection(SQLiteInStock.url);
            SQLiteInStock.stmt = SQLiteInStock.conn.createStatement();
            if(BxSort.equals("BrandName")){
                        
             if(SQLiteInStock.openDB()){
            String[][] records = SQLiteInStock.read("InStock");
            String[] columns = {"InStockID","BrandID", "BrandName", "Category", "Description", "SupplierID", "Recepient", "Quantity", "Date"};
            javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel(records, columns);
            this.tblInStock.setModel(model);
            SQLiteInStock.closeDB();
        }
            }
            else{
                String query = "SELECT * FROM InStock ORDER BY BrandName";
                ResultSet rs = SQLiteInStock.stmt.executeQuery(query);
                this.tblInStock.setModel(DbUtils.resultSetToTableModel(rs));
            }
            SQLiteInStock.conn.close();
        }
            catch(Exception e){
            System.out.println("Error: " + e);
        }
     }
        if("BrandID".equals(Choice)){

            try{ 
            SQLiteInStock.conn = getConnection(SQLiteInStock.url);
            SQLiteInStock.stmt = SQLiteInStock.conn.createStatement();
            if(BxSort.equals("BrandID")){
                        
             if(SQLiteInStock.openDB()){
            String[][] records = SQLiteInStock.read("InStock");
            String[] columns = {"InStockID","BrandID", "BrandName", "Category", "Description", "SupplierID", "Recepient", "Quantity", "Date"};
            javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel(records, columns);
            this.tblInStock.setModel(model);
            SQLiteInStock.closeDB();
        }
            }
            else{
                String query = "SELECT * FROM InStock ORDER BY BrandID";
                ResultSet rs = SQLiteInStock.stmt.executeQuery(query);
                this.tblInStock.setModel(DbUtils.resultSetToTableModel(rs));
            }
            SQLiteInStock.conn.close();
        }
            catch(Exception e){
            System.out.println("Error: " + e);
        }
     }
    }//GEN-LAST:event_BxSortActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmInStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmInStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmInStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmInStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmInStock().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> BxSort;
    private javax.swing.JButton btnPrintStock;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem menAdd;
    private javax.swing.JMenuItem menMain;
    private javax.swing.JMenuItem menUpdate;
    private javax.swing.JTable tblInStock;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
